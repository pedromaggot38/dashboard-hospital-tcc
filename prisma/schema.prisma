generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  root
  admin
  journalist
}
enum WeekDay {
  Segunda
  Terca
  Quarta
  Quinta
  Sexta
  Sabado
  Domingo
}

model User {
  id        String    @id @default(cuid())
  username  String    @unique
  password  String
  role      UserRole  @default(journalist)
  isBlocked Boolean   @default(false)
  name      String?
  phone     String?   @unique
  email     String?   @unique
  image     String?
  createdAt DateTime  @default(now())
  articles  Article[]

  @@index([id, username])
  @@map("user")
}

model Article {
  id               Int      @id @default(autoincrement())
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  title            String
  subtitle         String?
  content          String?
  published        Boolean  @default(false)
  slug             String   @unique
  author           String
  imageUrl         String?
  imageDescription String?
  user             User     @relation(fields: [userId], references: [id], onDelete: Restrict)
  userId           String

  @@index([slug, userId, createdAt])
  @@map("article")
}

model Token {
  id       Int    @id @default(autoincrement())
  username String
  token    String @unique

  @@unique([username, token])
  @@map("token")
}

model Doctor {
  id            Int       @id @default(autoincrement())
  name          String
  specialty     String
  crm           String
  phone         String?   @unique
  email         String?   @unique
  image         String?
  createdAt     DateTime  @default(now())
  schedules     Schedule[]

  @@index([id, name])
  @@map("doctor")
}

model Schedule {
  id          Int      @id @default(autoincrement())
  dayOfWeek   WeekDay
  startTime   DateTime
  endTime     DateTime
  doctor      Doctor   @relation(fields: [doctorId], references: [id], onDelete: Cascade)
  doctorId    Int

  @@index([doctorId, dayOfWeek, startTime])
  @@map("schedule")
}
